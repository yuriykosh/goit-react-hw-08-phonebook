{"version":3,"file":"static/js/186.41368a26.chunk.js","mappings":"iLAEaA,GAAQC,E,QAAAA,GAAY,CAC/BC,QAAS,CACPC,QAAS,CACPC,KAAM,UAENC,UAAW,CACTD,KAAM,c,sGCPd,EAAuB,wBAAvB,EAAuD,yBAAvD,EAA2F,4B,qECO9EE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAeD,OACE,iBAAMC,UAAWC,EAAUC,SAdR,SAAAC,GACnBA,EAAEC,iBAEFf,GAASgB,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOE,SAAAA,KACrBY,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,iBAAwBD,EAAIE,KAAKZ,MAClC,IACAa,OAAM,SAAAC,GAAS,IAClBnB,EAAS,IACTE,EAAY,GACb,EAGoDkB,aAAa,MAAhE,UACE,UAACC,EAAA,EAAD,CAAehC,MAAOA,EAAAA,EAAtB,WACE,SAACiC,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,QACNC,QAAQ,SACRC,KAAK,QACLrB,KAAK,QACLC,MAAOP,EACP4B,MAAM,YACNC,SAAUzB,EACVI,UAAWC,EACXqB,UAAQ,KAGV,SAACP,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,WACNC,QAAQ,SACRC,KAAK,WACLrB,KAAK,WACLC,MAAOL,EACP0B,MAAM,YACNC,SAAUzB,EACVI,UAAWC,EACXqB,UAAQ,KAEV,SAACC,EAAA,EAAD,CACEL,QAAQ,YACRC,KAAK,SACLC,MAAM,UACNpB,UAAWC,EAJb,wBAWP,EC1Ec,SAASuB,IACtB,OACE,0BACE,SAACpC,EAAD,KAGL,C","sources":["components/utils/ThemeProvider.jsx","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import { createTheme } from '@mui/material/styles';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: '#01579b',\n\n      secondary: {\n        main: '#2e7d32',\n      },\n    },\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"input\":\"LoginForm_input__aQRtt\",\"loginBtn\":\"LoginForm_loginBtn__ds2GS\"};","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, TextField, ThemeProvider } from '@mui/material';\nimport { theme } from 'components/utils/ThemeProvider';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(logIn({ email, password }))\n      .unwrap()\n      .then(res => {\n        toast.success(`Hello, ${res.user.name}`);\n      })\n      .catch(err => {});\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <ThemeProvider theme={theme}>\n        <TextField\n          id=\"filled-basic\"\n          label=\"Email\"\n          variant=\"filled\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          color=\"secondary\"\n          onChange={handleChange}\n          className={css.input}\n          required\n        />\n\n        <TextField\n          id=\"filled-basic\"\n          label=\"Password\"\n          variant=\"filled\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          color=\"secondary\"\n          onChange={handleChange}\n          className={css.input}\n          required\n        />\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          color=\"primary\"\n          className={css.loginBtn}\n        >\n          Log In\n        </Button>\n      </ThemeProvider>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["theme","createTheme","palette","primary","main","secondary","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","css","onSubmit","e","preventDefault","logIn","unwrap","then","res","toast","user","catch","err","autoComplete","ThemeProvider","TextField","id","label","variant","type","color","onChange","required","Button","Login"],"sourceRoot":""}